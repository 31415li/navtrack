image: docker:latest

services:
  - docker:dind
  
variables:
  DOCKER_TLS_CERTDIR: ""

stages:
  - build
  - test
  - publish
  - deploy

before_script:
  - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin
  - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com

build-api:
  stage: build
  script:
    - docker build . -f Navtrack.Api/Dockerfile -t registry.gitlab.com/navtrack/navtrack/api:build
    - docker push registry.gitlab.com/navtrack/navtrack/api:build

build-listener:
  stage: build
  script:
    - docker build . -f Navtrack.Listener/Dockerfile -t registry.gitlab.com/navtrack/navtrack/listener:build
    - docker push registry.gitlab.com/navtrack/navtrack/listener:build

test-listener:
  stage: test
  script:
    - docker build . -f Navtrack.Listener.Tests/Dockerfile

publish-api:
  stage: publish
  dependencies:
    - build-api
  script:
    - docker pull registry.gitlab.com/navtrack/navtrack/api:build
    - docker tag registry.gitlab.com/navtrack/navtrack/api:build navtrack/api:latest
    - docker push navtrack/api:latest

publish-listener:
  stage: publish
  dependencies:
    - build-listener
  script:
    - docker pull registry.gitlab.com/navtrack/navtrack/listener:build
    - docker tag registry.gitlab.com/navtrack/navtrack/listener:build navtrack/listener:latest
    - docker push navtrack/listener:latest

deploy:
  stage: deploy
  before_script:
    - 'which ssh-agent || ( apk update && apk add openssh-client )'
  script:
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$DEPLOY_SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - eval $(ssh-agent -s)
    - echo "$DEPLOY_SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null 2>&1
    - echo "SQLCONNSTR_NAVTRACK=${SQLCONNSTR_NAVTRACK}" > .env_navtrack
    - scp .env_navtrack $DEPLOY_SSH_USER@$DEPLOY_HOST:$DEPLOY_FOLDER
    - ssh $DEPLOY_SSH_USER@$DEPLOY_HOST "cd $DEPLOY_FOLDER && wget https://raw.githubusercontent.com/navtrack/navtrack/master/docker-compose.yml -O docker-compose.yml && docker-compose pull && docker-compose up -d"