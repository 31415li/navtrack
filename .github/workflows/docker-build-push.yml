name: Docker build & push

on:
  push:
    branches:
      - master

    tags:
      - v*

env:
  IMAGE_NAME_CORE: core

jobs:
  build-push:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Build images
        run: |
          docker build . --file Navtrack.Core/Dockerfile --tag $IMAGE_NAME_CORE

      - name: Log into GitHub registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Log into Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login -u ${{ secrets.DOCKER_HUB_USER }} --password-stdin

      - name: Push images to GitHub
        run: |
          IMAGE_ID_CORE=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME_CORE

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest

          echo IMAGE_ID_CORE=$IMAGE_ID_CORE
          echo VERSION=$VERSION

          docker tag $IMAGE_NAME_CORE $IMAGE_ID_CORE:$VERSION
          docker push $IMAGE_ID_CORE:$VERSION

      - name: Push images to Docker Hub
        run: |
          IMAGE_ID_CORE=navtrack/$IMAGE_NAME_CORE

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest

          echo IMAGE_ID_CORE=$IMAGE_ID_CORE
          echo VERSION=$VERSION

          docker tag $IMAGE_NAME_CORE $IMAGE_ID_CORE:$VERSION
          docker push $IMAGE_ID_CORE:$VERSION
